package ch.modzero.deserialization_sender.exploits;

import java.io.Serializable;

import ch.modzero.deserialization_sender.PayloadFeedbackReceiver;

/**
 * Created by work on 27.11.17.
 */

public abstract class ExploitBase {
    private Boolean payload_successful = false;

    void markPayloadSuccessful() {
        payload_successful = true;
    }

    boolean wasPayloadSuccessful() {
        return payload_successful;
    }

    /**
     * Call this method in the place where you would want to add the payload into your exploit.
     * @return A String containing a standardized testing payload.
     */
    String getPayload() {
        return "am broadcast --user 0 -a " + PayloadFeedbackReceiver.class.getCanonicalName() +
                " -e android.intent.extra.TEXT " + getName();
    }

    /**
     * Class name of the exploit. Used to make the exploits and payloads identifyable.
     * @return String with class name.
     */
    protected String getName() {
        return this.getClass().getSimpleName();
    }

    /**
     * Get the exploit including payload packed in a ready to send intent. This is where the magic
     * happens.
     * @return A deserializable object which will execute the payload.
     */
    public abstract Serializable getDeserializable() throws Exception;

    public String toString() {
        String state = payload_successful ? "success" : "-";
        return getName() + " " + state;
    }
}
